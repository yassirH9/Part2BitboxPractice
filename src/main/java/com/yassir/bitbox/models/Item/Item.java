package com.yassir.bitbox.models.Item;

import com.yassir.bitbox.enums.ItemStateEnum;
import com.yassir.bitbox.models.user.User;
import jakarta.persistence.*;
import lombok.*;

import java.util.Date;
import java.util.Set;


//---lombok---
@Getter
@Setter
@AllArgsConstructor
@NoArgsConstructor
//-------------
@Entity
@Table(name="Items")
@Builder // inicialize all
public class Item {
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "itemCode", unique = true)
    private Long itemCode;

    @Column(name = "description")
    private String description;

    @Column(name = "price", nullable = false)
    private Double price;

    @Enumerated(EnumType.STRING)
    @Column(name = "state")
    private ItemStateEnum state;

    // Many-to-many relationship between item and supplier

    @ManyToMany(mappedBy = "items",  cascade = CascadeType.ALL)
    private Set<Supplier> suppliers;

    // One-to-many relationship (any item can hold many discounts)
    @OneToMany(mappedBy = "item", cascade = CascadeType.ALL, orphanRemoval = true)
    private Set<PriceReduction> priceReductions;

    @Column(name = "creationDate")
    @Temporal(TemporalType.DATE)
    private Date creationDate;

    // One-to-many relationship (an item can have one creator)
    @ManyToOne
    @JoinColumn(name = "userId", nullable = false)
    private User creator;

    //------------------------------------
    // NON GENERATED BY LOMBOK METHODS
    //------------------------------------
    public void addSupplier(Supplier supplier) {
        if(supplier!=null){
            this.suppliers.add(supplier);
        }
    }
    public void addPriceReduction(PriceReduction priceReduction){
        if(priceReduction!=null) {
            this.priceReductions.add(priceReduction);
        }
    }
}
